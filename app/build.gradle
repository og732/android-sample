buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 22
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.example.mogawa.itunesmusicsearch"
        minSdkVersion 22
        targetSdkVersion 22
        versionCode 1
        versionName "1.1.18"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.betaDistributionReleaseNotes = getReleaseNotes()
            ext.betaDistributionGroupAliases = "samplegroup"
        }
        debug {
            debuggable true
            ext.betaDistributionReleaseNotes = getReleaseNotes()
            ext.betaDistributionGroupAliases = "samplegroup"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.mcxiaoke.volley:library:1.0.16'
    compile('com.crashlytics.sdk.android:crashlytics:2.3.2@aar') {
        transitive = true;
    }
}

afterEvaluate {
    initCrashlyticsPropertiesIfNeeded()
}

def getReleaseNotes() {
    def appVersion = android.defaultConfig.versionName
    appVersion = appVersion.replaceFirst(/(.)-\d+/){it[1]}
    def releaseNotes = 'Release version: ' + appVersion
    File releaseNotesFile = file('../RELEASE_NOTE/' + appVersion + '-note.md')

    if ( releaseNotesFile.exists() ) {
        releaseNotes = releaseNotesFile.getText()
    }
    return releaseNotes
}

def initCrashlyticsPropertiesIfNeeded() {
    File propertiesFile = file('crashlytics.properties')
    if (!propertiesFile.exists()) {
        def commentMessage = "This is autogenerated crashlytics property from system environment to prevent key to be committed to source control."
        ant.propertyfile(file: "crashlytics.properties", comment: commentMessage) {
            entry(key: "apiSecret", value: crashlyticsApiSecret)
            entry(key: "apiKey", value: crashlyticsApiKey)
        }
    }
}
